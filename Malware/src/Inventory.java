public class Inventory{

	String gold;
	String keys;
	String gems;
	String magicCarpets;
	String skullKeys;
	String blackBadge;
	String blackBadgeValue;
	String magicAxes;
	String hex;
	
	public Inventory(String gold, String keys, String gems, String magicCarpets, String skullKeys, String blackBadge, String magicAxes, String hex) {
		this.gold = gold;
		this.keys = keys;
		this.gems = gems;
		this.magicCarpets = magicCarpets;
		this.skullKeys = skullKeys;
		this.blackBadge = blackBadge;
		this.magicAxes = magicAxes;
		this.hex = hex;
    	if (blackBadge.equals("00"))
    		this.blackBadgeValue = "0";
    	else 
    		this.blackBadgeValue = "1";
		
	}
	
    public void setGold(int input) {
    	this.gold = littleEndian(input);
    }
    
    public void setKeys(int input) {
    	this.keys = littleEndian(input);
    }
    
    public void setGems(int input) {
    	this.gems = littleEndian(input);
    }
    
    public void setMagicCarpets(int input) {
    	this.magicCarpets = littleEndian(input);
    }
    
    public void setSkullKeys(int input) {
    	this.skullKeys = littleEndian(input);
    }
    
    public void setBlackBadge(int input) {
    	if (input > 0) {
    		this.blackBadge = "ff";
    		this.blackBadgeValue = "1";
    	}
    	else {
    		this.blackBadge = "00";
    		this.blackBadgeValue = "0";
    	}
    }
    
    public void setMagicAxes(int input) {
    	this.magicAxes = littleEndian(input);
    }
	
    //ensures data is saved as little endian
    public String littleEndian (int input) {
        String littleEndian = "";
    	String hexString = Integer.toHexString(input);
    	if (input <= 9)
    		littleEndian = "0" + hexString;
    	else if (input > 9 && input <= 254)
        		littleEndian = hexString;
    	else if (input > 254 && input < 4096)
    		littleEndian = hexString.substring(1, 3) +  "0" + hexString.substring(0, 1);
    	else 
    		littleEndian = hexString.substring(2, 4) + hexString.substring(0, 2);
    	return littleEndian;
    }
    
    //reverses order for little endian to big endian for interface display
    public int littleEndianToInt(String littleEndian) {   
		return Integer.parseInt(littleEndian.substring(2, 4) + littleEndian.substring(0, 2), 16);
    }

    //creates a hex string based SAVED.GAM but with modifed values
    public String generateHex() {
    	return hex.substring(0, 4) + gold + keys + gems + hex.substring(12, 16) +
    			magicCarpets + skullKeys + hex.substring(20, 44) + blackBadge +
    			hex.substring(46, 125) + magicAxes + hex.substring(126, hex.length());
    }
    
    public String toString() {
		return "\n----- Inventory -----\n" + "Gold: " + littleEndianToInt(gold) + "\nKeys: " + Integer.parseInt(keys, 16) + 
				"\nGems: " + Integer.parseInt(gems, 16) + "\nMagic Carpets: " + Integer.parseInt(magicCarpets, 16) +
				"\nSkull Keys: " + Integer.parseInt(skullKeys, 16) + "\nBlack Badges: " + blackBadgeValue +  
				"\nMagic Axes: " + Integer.parseInt(magicAxes, 16) +  "\n"; 
    }
    
}
